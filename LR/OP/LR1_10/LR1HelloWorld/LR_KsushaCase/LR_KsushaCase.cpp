#include <iostream>
using namespace std;
int main()
{
    setlocale(0, "rus");
    long double x, E, An, An1, alf;
    char symbol = 'y'; // определяется переменная symbol типа char и устанавливается значение 'y'
    while (symbol == 'y') { // начинается цикл while, который будет выполняться до тех пор, пока значение переменной symbol равно 'y'
        cout << "По значению x:";
        while (!(cin >> x) ||  cin.peek() != '\n' ||  x > 0.5 ||  x < (-0.25)) {
            cout << "Ошибка! Введите корректное число в диапазоне от -0.25 до 0.5 включительно.\n";
            cin.clear(); // очистка состояния ввода
            cin.ignore(100000, '\n'); // игнорирование оставшихся символов во входном потоке до символа новой строки
        }
        cout << "По значению alf:";
        while (!(cin >> alf) ||  cin.peek() != '\n' || alf < 0) {
            cout << "Ошибка! Введите число больше или равное 0 \n";
            cin.clear(); // очистка состояния ввода
            cin.ignore(100000, '\n'); // игнорирование оставшихся символов во входном потоке до символа новой строки
        }
        long double Sum = 0, n = 2;
        int k = 1;
        if (int(alf) == alf) { // условия для количества итераций
            int e = (int)alf; // перевод alf из типа данных double в int
            for (int i = 1; i <= e; i++) {
                An = (pow(-1, n) * pow(2, 2 * n - 1) * pow(x, 2 * n - 1)) / (2 * n - 1); // вычисление значения члена ряда
                Sum += An + atan(2); // рассчет текущей частичной суммы
                An1 = (pow(-1, n + 1) * pow(2, 2 * (n + 1) - 1) * pow(x, 2 * (n + 1) - 1) / (2 * (n + 1) - 1)); // рассчет погрешности
                E = abs(An1 / Sum); // вычисление погрешности для текущей частичной суммы 
                cout << "n:" << k++ << endl; // вывод значения номера итерации
                cout << "An:" << An << endl;
                cout << "Sum:" << Sum << endl;
                cout << "E:" << E << endl;
                n++;
            }
        }
        else {
            do {
                An = (pow(-1, n) * pow(2, 2 * n - 1) * pow(x, 2 * n - 1)) / (2 * n - 1);
                Sum += An + atan(2); //  рассчитывается текущая частичная сумма
                An1 = (pow(-1, n + 1) * pow(2, 2 * (n + 1) - 1) * pow(x, 2 * (n + 1) - 1) / (2 * (n + 1) - 1)); // рассчет погрешности
                E = abs(An1 / Sum);
                cout << "n:" << k++ << endl; // вывод значения номера итерации
                cout << "An:" << An << endl;
                cout << "Sum:" << Sum << endl;
                cout << "E:" << E << endl;
                n++;
            } while (E > alf); // условие повторения цикла
        }

        cout << "Попробовать снова? (y or n)" << endl; // вывод сообщения с запросом о продолжении выполнения программы
        cin >> symbol;
    }
    return 0;
}